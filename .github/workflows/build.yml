name: Android CI/CD - Google Play Ready

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  JAVA_VERSION: '17'
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=false

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
      
    - name: Run Unit Tests
      run: ./gradlew test --no-daemon --stacktrace
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          app/build/reports/tests/
          app/build/test-results/
        retention-days: 7

  build-debug:
    name: Build Debug APK
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 30
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Build Debug APK
      run: ./gradlew assembleDebug --no-daemon --stacktrace --info
      
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-${{ github.run_number }}
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 14
        
    - name: Generate Build Report
      if: always()
      run: |
        echo "## 📱 Debug Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Run**: #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
          APK_SIZE=$(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)
          echo "- **Debug APK**: ✅ Generated ($APK_SIZE)" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Debug APK**: ❌ Build Failed" >> $GITHUB_STEP_SUMMARY
        fi

  build-release:
    name: Build Release AAB (Google Play Ready)
    runs-on: ubuntu-latest
    needs: [test, build-debug]
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 30
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Decode Keystore
      if: ${{ secrets.KEYSTORE_BASE64 != '' }}
      run: |
        echo ${{ secrets.KEYSTORE_BASE64 }} | base64 --decode > app/release.keystore
      
    - name: Build Release AAB
      env:
        KEYSTORE_PATH: ../release.keystore
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        if [ "${{ secrets.KEYSTORE_BASE64 }}" == "" ]; then
          echo "⚠️ No keystore configured - building unsigned release"
          ./gradlew bundleRelease --no-daemon --stacktrace
        else
          echo "🔐 Building signed release with keystore"
          ./gradlew bundleRelease --no-daemon --stacktrace
        fi
      
    - name: Upload Release AAB
      uses: actions/upload-artifact@v4
      with:
        name: release-aab-${{ github.run_number }}
        path: app/build/outputs/bundle/release/app-release.aab
        retention-days: 90
        
    - name: Generate Release Report
      if: always()
      run: |
        echo "## 🚀 Release Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Run**: #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        if [ -f app/build/outputs/bundle/release/app-release.aab ]; then
          AAB_SIZE=$(du -h app/build/outputs/bundle/release/app-release.aab | cut -f1)
          echo "- **Release AAB**: ✅ Generated ($AAB_SIZE)" >> $GITHUB_STEP_SUMMARY
          echo "- **Google Play**: Ready for upload 📱" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Release AAB**: ❌ Build Failed" >> $GITHUB_STEP_SUMMARY
        fi